spring.application.name=order-service

server.port=0

spring.datasource.url=jdbc:postgresql://localhost:5433/order-service
spring.datasource.username=admin
spring.datasource.password=password

# none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

inventory.service.url=http://localhost:8083/api/inventory

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#Spring Actuator
management.health.circutbreaker.enabled=true
#makes all endpoints available
management.endpoints.web.exposure.include=*
#makes the health endpoint accessible without authentication
management.endpont.health.show-details=always

#Resilience4j

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
# determines how many events can be stored
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# specifies that the 'Inventory' circut breaker uses a count based sliding windows
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize = 5
# sets the failure rate threshold to 50%
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
# sets the wait threshold to 5 seconds
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5
# sets the permitted number of calls in half open state to 2
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=2
# enables automatic transition from OPEN to HALF OPEN state once the wait duration has passed
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resiliency4j Timeout Properties
resilience4j.timeout.instances.inventory.timeoutDuration=2s

# Resilience4j Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resileince4j.retry.instances.inventory.wait-duration=1s

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}

